class quicksort {
	int arraySize = 5;
	int array[30];

	void quicksort(int izq, int der) {
		if (izq < der) {
			int k;
			k = particionar(izq, der);
			quicksort(izq, k);
			quicksort(k+1, der);
		}
	}
	
	int particionar(int izq, int der){
		int p;
		int i, j;
		p = array[izq];		
		i = izq; 
		j = der;
		while (i < j) {
			while (array[i] > p && i < der) {
				i = i + 1;
			}
			while (array[j] <= p && j > izq) {
				j = j - 1;
			}
			
			if (i == izq && j == i) {
				quicksort(izq + 1, der);
			}
			if (i == der && j == i) {
				quicksort(izq, der - 1);
			}
			
			if (i < j) {
				swap(i, j);
			}
		}return j;
	}
	
	void swap(int i, int j) {
		int aux;
		aux = array[i];
		array[i] = array[j];
		array[j] = aux;
	}
	
	void ___() {
		int i;
		for(i = 0; i < arraySize; i = i + 1){
			read array[i];
		}
	}
	
	void print_array(){
		int i;
		for(i = 0; i < arraySize; i = i + 1){
			print array[i], "\n";
		}
	}
	
	void main() {
		int tt;
		tt = particionar;
		tt = tt;
		___();
		quicksort(0, arraySize - 1);
		print_array();
	}
}